// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using data_security.Data;

#nullable disable

namespace data_security.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20250426112415_AddCreditCard")]
    partial class AddCreditCard
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "9.0.4")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("data_security.Models.CreditCard", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("Id"));

                    b.Property<string>("CVC")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("CardNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("IdNumber")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("UserId")
                        .HasColumnType("int");

                    b.Property<string>("ValidDate")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.HasIndex("UserId")
                        .IsUnique();

                    b.ToTable("CreditCards");

                    b.HasData(
                        new
                        {
                            Id = 1,
                            CVC = "123",
                            CardNumber = "1234 5567 8901 2345",
                            FirstName = "Israeli",
                            IdNumber = "123456789",
                            LastName = "Israeili",
                            UserId = 1,
                            ValidDate = "12/32"
                        },
                        new
                        {
                            Id = 2,
                            CVC = "102",
                            CardNumber = "4000 1002 5678 9002",
                            FirstName = "User1",
                            IdNumber = "100000002",
                            LastName = "Last1",
                            UserId = 2,
                            ValidDate = "10/30"
                        },
                        new
                        {
                            Id = 3,
                            CVC = "103",
                            CardNumber = "4000 1003 5678 9003",
                            FirstName = "User2",
                            IdNumber = "100000003",
                            LastName = "Last2",
                            UserId = 3,
                            ValidDate = "10/30"
                        },
                        new
                        {
                            Id = 4,
                            CVC = "104",
                            CardNumber = "4000 1004 5678 9004",
                            FirstName = "User3",
                            IdNumber = "100000004",
                            LastName = "Last3",
                            UserId = 4,
                            ValidDate = "10/30"
                        },
                        new
                        {
                            Id = 5,
                            CVC = "105",
                            CardNumber = "4000 1005 5678 9005",
                            FirstName = "User4",
                            IdNumber = "100000005",
                            LastName = "Last4",
                            UserId = 5,
                            ValidDate = "10/30"
                        },
                        new
                        {
                            Id = 6,
                            CVC = "106",
                            CardNumber = "4000 1006 5678 9006",
                            FirstName = "User5",
                            IdNumber = "100000006",
                            LastName = "Last5",
                            UserId = 6,
                            ValidDate = "10/30"
                        },
                        new
                        {
                            Id = 7,
                            CVC = "107",
                            CardNumber = "4000 1007 5678 9007",
                            FirstName = "User6",
                            IdNumber = "100000007",
                            LastName = "Last6",
                            UserId = 7,
                            ValidDate = "10/30"
                        },
                        new
                        {
                            Id = 8,
                            CVC = "108",
                            CardNumber = "4000 1008 5678 9008",
                            FirstName = "User7",
                            IdNumber = "100000008",
                            LastName = "Last7",
                            UserId = 8,
                            ValidDate = "10/30"
                        },
                        new
                        {
                            Id = 9,
                            CVC = "109",
                            CardNumber = "4000 1009 5678 9009",
                            FirstName = "User8",
                            IdNumber = "100000009",
                            LastName = "Last8",
                            UserId = 9,
                            ValidDate = "10/30"
                        },
                        new
                        {
                            Id = 10,
                            CVC = "110",
                            CardNumber = "4000 1010 5678 9010",
                            FirstName = "User9",
                            IdNumber = "100000010",
                            LastName = "Last9",
                            UserId = 10,
                            ValidDate = "10/30"
                        });
                });

            modelBuilder.Entity("data_security.Models.User", b =>
                {
                    b.Property<int>("UserID")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("UserID"));

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(100)
                        .HasColumnType("nvarchar(100)");

                    b.Property<bool>("IsAdmin")
                        .HasColumnType("bit");

                    b.Property<string>("PasswordHash")
                        .IsRequired()
                        .HasMaxLength(64)
                        .HasColumnType("nvarchar(64)");

                    b.Property<string>("Username")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("UserID");

                    b.HasIndex("Username")
                        .IsUnique();

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            UserID = 1,
                            CreatedAt = new DateTime(2025, 4, 19, 14, 0, 0, 0, DateTimeKind.Unspecified),
                            Email = "admin@example.com",
                            IsAdmin = true,
                            PasswordHash = "240be518fabd2724ddb6f04eeb1da5967448d7e831c08c8fa822809f74c720a9",
                            Username = "admin"
                        },
                        new
                        {
                            UserID = 2,
                            CreatedAt = new DateTime(2025, 4, 26, 4, 24, 14, 609, DateTimeKind.Local).AddTicks(5445),
                            Email = "user1@example.com",
                            IsAdmin = false,
                            PasswordHash = "bc5848f227cc161eb5f68dfe98cb13110a9c843ce69e953a88107d865583d397",
                            Username = "user1"
                        },
                        new
                        {
                            UserID = 3,
                            CreatedAt = new DateTime(2025, 4, 26, 4, 24, 14, 609, DateTimeKind.Local).AddTicks(5611),
                            Email = "user2@example.com",
                            IsAdmin = false,
                            PasswordHash = "bc5848f227cc161eb5f68dfe98cb13110a9c843ce69e953a88107d865583d397",
                            Username = "user2"
                        },
                        new
                        {
                            UserID = 4,
                            CreatedAt = new DateTime(2025, 4, 26, 4, 24, 14, 609, DateTimeKind.Local).AddTicks(5635),
                            Email = "user3@example.com",
                            IsAdmin = false,
                            PasswordHash = "bc5848f227cc161eb5f68dfe98cb13110a9c843ce69e953a88107d865583d397",
                            Username = "user3"
                        },
                        new
                        {
                            UserID = 5,
                            CreatedAt = new DateTime(2025, 4, 26, 4, 24, 14, 609, DateTimeKind.Local).AddTicks(5654),
                            Email = "user4@example.com",
                            IsAdmin = false,
                            PasswordHash = "bc5848f227cc161eb5f68dfe98cb13110a9c843ce69e953a88107d865583d397",
                            Username = "user4"
                        },
                        new
                        {
                            UserID = 6,
                            CreatedAt = new DateTime(2025, 4, 26, 4, 24, 14, 609, DateTimeKind.Local).AddTicks(5685),
                            Email = "user5@example.com",
                            IsAdmin = false,
                            PasswordHash = "bc5848f227cc161eb5f68dfe98cb13110a9c843ce69e953a88107d865583d397",
                            Username = "user5"
                        },
                        new
                        {
                            UserID = 7,
                            CreatedAt = new DateTime(2025, 4, 26, 4, 24, 14, 609, DateTimeKind.Local).AddTicks(5703),
                            Email = "user6@example.com",
                            IsAdmin = false,
                            PasswordHash = "bc5848f227cc161eb5f68dfe98cb13110a9c843ce69e953a88107d865583d397",
                            Username = "user6"
                        },
                        new
                        {
                            UserID = 8,
                            CreatedAt = new DateTime(2025, 4, 26, 4, 24, 14, 609, DateTimeKind.Local).AddTicks(5720),
                            Email = "user7@example.com",
                            IsAdmin = false,
                            PasswordHash = "bc5848f227cc161eb5f68dfe98cb13110a9c843ce69e953a88107d865583d397",
                            Username = "user7"
                        },
                        new
                        {
                            UserID = 9,
                            CreatedAt = new DateTime(2025, 4, 26, 4, 24, 14, 609, DateTimeKind.Local).AddTicks(5736),
                            Email = "user8@example.com",
                            IsAdmin = false,
                            PasswordHash = "bc5848f227cc161eb5f68dfe98cb13110a9c843ce69e953a88107d865583d397",
                            Username = "user8"
                        },
                        new
                        {
                            UserID = 10,
                            CreatedAt = new DateTime(2025, 4, 26, 4, 24, 14, 609, DateTimeKind.Local).AddTicks(5755),
                            Email = "user9@example.com",
                            IsAdmin = false,
                            PasswordHash = "bc5848f227cc161eb5f68dfe98cb13110a9c843ce69e953a88107d865583d397",
                            Username = "user9"
                        });
                });

            modelBuilder.Entity("data_security.Models.CreditCard", b =>
                {
                    b.HasOne("data_security.Models.User", "User")
                        .WithOne("CreditCard")
                        .HasForeignKey("data_security.Models.CreditCard", "UserId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("User");
                });

            modelBuilder.Entity("data_security.Models.User", b =>
                {
                    b.Navigation("CreditCard")
                        .IsRequired();
                });
#pragma warning restore 612, 618
        }
    }
}
