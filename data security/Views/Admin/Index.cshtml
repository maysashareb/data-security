@model IEnumerable<data_security.Models.User>
@{
    ViewData["Title"] = "Admin Dashboard";
}

<style>

    :root {
        --primary-color: #0078ff; 
        --secondary-color: #ffde00; 
        --accent-color: #ff4e50; 
        --background-color: #001c40; 
        --text-color: #ffffff;
        --card-bg: rgba(255, 255, 255, 0.12);
        --input-bg: rgba(255, 255, 255, 0.08);
        --success-color: #00c853;
        --danger-color: #ff4e50;
        --warning-color: #ffde00;
    }

    .admin-container {
        animation: fadeIn 1s ease-in-out;
    }

    .admin-title {
        text-align: center;
        font-weight: 700;
        font-size: 2.5rem;
        margin-bottom: 10px;
        background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        animation: glow 3s infinite alternate;
    }

    .admin-subtitle {
        text-align: center;
        font-weight: 500;
        font-size: 1.5rem;
        margin-bottom: 30px;
        color: rgba(255, 255, 255, 0.8);
    }

    .card {
        background: var(--card-bg);
        border: none;
        border-radius: 15px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        backdrop-filter: blur(8px);
        transition: all 0.3s ease;
        margin-bottom: 30px;
        overflow: hidden;
    }

    .card-header {
        background: linear-gradient(135deg, var(--primary-color), #0051c8);
        color: white;
        padding: 1rem 1.5rem;
        border-bottom: 1px solid rgba(255, 255, 255, 0.1);
        position: relative;
    }

        .card-header:before {
            content: '';
            position: absolute;
            top: -50%;
            left: -50%;
            width: 200%;
            height: 200%;
            background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
            transform: rotate(45deg);
            animation: shimmer 3s infinite;
        }

    .card-body {
        padding: 1.5rem;
    }

    .table {
        color: white;
        border-collapse: separate;
        border-spacing: 0 8px;
        margin-top: -8px;
    }

        .table thead th {
            border-top: none;
            border-bottom: 1px solid rgba(255, 255, 255, 0.1);
            padding: 12px 15px;
            font-weight: 600;
            color: var(--secondary-color);
            text-transform: uppercase;
            font-size: 0.85rem;
            letter-spacing: 1px;
        }

        .table tbody tr {
            background-color: rgba(255, 255, 255, 0.05);
            border-radius: 10px;
            box-shadow: 0 2px 10px rgba(0, 0, 0, 0.1);
            transition: all 0.3s ease;
        }

            .table tbody tr:hover {
                transform: translateY(-2px);
                background-color: rgba(255, 255, 255, 0.08);
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.2);
            }

        .table tbody td {
            padding: 12px 15px;
            border: none;
            vertical-align: middle;
        }

        .table tbody tr td:first-child {
            border-top-left-radius: 10px;
            border-bottom-left-radius: 10px;
        }

        .table tbody tr td:last-child {
            border-top-right-radius: 10px;
            border-bottom-right-radius: 10px;
        }

    .badge {
        padding: 6px 12px;
        border-radius: 20px;
        font-weight: 500;
        font-size: 0.8rem;
    }

    .badge-success {
        background-color: rgba(0, 200, 83, 0.2);
        color: var(--success-color);
        border: 1px solid rgba(0, 200, 83, 0.3);
    }

    .badge-secondary {
        background-color: rgba(255, 255, 255, 0.1);
        color: rgba(255, 255, 255, 0.8);
        border: 1px solid rgba(255, 255, 255, 0.2);
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--primary-color), #0051c8);
        border: none;
        border-radius: 8px;
        padding: 10px 20px;
        font-weight: 600;
        letter-spacing: 0.5px;
        box-shadow: 0 4px 15px rgba(0, 120, 255, 0.3);
        transition: all 0.3s;
        position: relative;
        overflow: hidden;
    }

        .btn-primary:hover {
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(0, 120, 255, 0.4);
            background: linear-gradient(135deg, #0051c8, var(--primary-color));
        }

    .btn-danger {
        background: linear-gradient(135deg, var(--danger-color), #c41d20);
        border: none;
        color: white;
        box-shadow: 0 4px 15px rgba(255, 78, 80, 0.3);
    }

        .btn-danger:hover {
            background: linear-gradient(135deg, #c41d20, var(--danger-color));
            transform: translateY(-2px);
            box-shadow: 0 8px 20px rgba(255, 78, 80, 0.4);
        }

    .btn-sm {
        padding: 6px 12px;
        font-size: 0.85rem;
    }

    .alert {
        border-radius: 10px;
        padding: 15px 20px;
        margin-bottom: 20px;
        border: none;
        position: relative;
        z-index: 1;
        overflow: hidden;
    }

    .alert-success {
        background-color: rgba(0, 200, 83, 0.15);
        border-left: 4px solid var(--success-color);
        color: #d4edda;
    }

    .alert-danger {
        background-color: rgba(255, 78, 80, 0.15);
        border-left: 4px solid var(--danger-color);
        color: #f8d7da;
    }

    .alert:before {
        content: '';
        position: absolute;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.05), transparent);
        z-index: -1;
        animation: shimmer 2s infinite;
    }

    .action-buttons form {
        display: inline-block;
    }

    .user-count-summary {
        display: flex;
        gap: 20px;
        margin-bottom: 20px;
    }

    .stat-card {
        flex: 1;
        background: rgba(255, 255, 255, 0.08);
        border-radius: 10px;
        padding: 15px;
        text-align: center;
        box-shadow: 0 4px 15px rgba(0, 0, 0, 0.2);
        transition: all 0.3s ease;
    }

        .stat-card:hover {
            transform: translateY(-5px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.3);
        }

    .stat-number {
        font-size: 2.5rem;
        font-weight: 700;
        margin: 10px 0;
    }

    .total-users .stat-number {
        color: var(--primary-color);
    }

    .admin-users .stat-number {
        color: var(--success-color);
    }

    .recent-users .stat-number {
        color: var(--secondary-color);
    }

    .stat-label {
        color: rgba(255, 255, 255, 0.7);
        font-size: 0.9rem;
        text-transform: uppercase;
        letter-spacing: 1px;
    }

    .stat-icon {
        font-size: 1.5rem;
        margin-bottom: 10px;
    }

    @@keyframes fadeIn {
        0%

    {
        opacity: 0;
        transform: translateY(20px);
    }

    100% {
        opacity: 1;
        transform: translateY(0);
    }

    }

    @@keyframes shimmer {
        0%

    {
        transform: translateX(-100%) rotate(45deg);
    }

    100% {
        transform: translateX(100%) rotate(45deg);
    }

    }

    @@keyframes glow {
        0%

    {
        text-shadow: 0 0 5px rgba(0, 120, 255, 0.5);
    }

    100% {
        text-shadow: 0 0 15px rgba(0, 120, 255, 0.8), 0 0 30px rgba(0, 120, 255, 0.6);
    }

    }

    .create-user-btn {
        display: inline-block;
        margin-bottom: 20px;
    }

        .create-user-btn i {
            margin-right: 5px;
        }
</style>

<div class="container admin-container">
    <h1 class="admin-title">Admin Dashboard</h1>
    <h4 class="admin-subtitle">User Management</h4>

    @if (TempData["SuccessMessage"] != null)
    {
        <div class="alert alert-success">
            <i class="fas fa-check-circle mr-2"></i> @TempData["SuccessMessage"]
        </div>
    }
    @if (TempData["ErrorMessage"] != null)
    {
        <div class="alert alert-danger">
            <i class="fas fa-exclamation-circle mr-2"></i> @TempData["ErrorMessage"]
        </div>
    }

    <div class="user-count-summary">
        <div class="stat-card total-users">
            <i class="fas fa-users stat-icon"></i>
            <div class="stat-number">@Model.Count()</div>
            <div class="stat-label">Total Users</div>
        </div>
        <div class="stat-card admin-users">
            <i class="fas fa-user-shield stat-icon"></i>
            <div class="stat-number">@Model.Count(u => u.IsAdmin)</div>
            <div class="stat-label">Administrators</div>
        </div>
        <div class="stat-card recent-users">
            <i class="fas fa-user-clock stat-icon"></i>
            <div class="stat-number">@Model.Count(u => u.CreatedAt >= DateTime.Now.AddDays(-7))</div>
            <div class="stat-label">New This Week</div>
        </div>
    </div>

    <div class="card">
        <div class="card-header">
            <div class="d-flex justify-content-between align-items-center">
                <h5 class="mb-0"><i class="fas fa-user-cog mr-2"></i> User Management</h5>
                <a asp-controller="Account" asp-action="Register" class="btn btn-primary create-user-btn">
                    <i class="fas fa-user-plus"></i> Create New User
                </a>
            </div>
        </div>
        <div class="card-body">
            <table class="table">
                <thead>
                    <tr>
                        <th><i class="fas fa-fingerprint mr-1"></i> ID</th>
                        <th><i class="fas fa-user mr-1"></i> Username</th>
                        <th><i class="fas fa-envelope mr-1"></i> Email</th>
                        <th><i class="fas fa-user-shield mr-1"></i> Admin</th>
                        <th><i class="fas fa-calendar-alt mr-1"></i> Created</th>
                        <th><i class="fas fa-cogs mr-1"></i> Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var user in Model)
                    {
                        <tr>
                            <td>@user.UserID</td>
                            <td>@user.Username</td>
                            <td>@user.Email</td>
                            <td>
                                @if (user.IsAdmin)
                                {
                                    <span class="badge badge-success">
                                        <i class="fas fa-check-circle mr-1"></i> Yes
                                    </span>
                                }
                                else
                                {
                                    <span class="badge badge-secondary">
                                        <i class="fas fa-times-circle mr-1"></i> No
                                    </span>
                                }
                            </td>
                            <td>@user.CreatedAt.ToString("yyyy-MM-dd")</td>
                            <td class="action-buttons">
                                <form asp-action="DeleteUser" method="post"
                                      onsubmit="return confirm('Are you sure you want to delete this user?');">
                                    <input type="hidden" name="id" value="@user.UserID" />
                                    <button type="submit" class="btn btn-sm btn-danger">
                                        <i class="fas fa-trash-alt mr-1"></i> Delete
                                    </button>
                                </form>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const tableRows = document.querySelectorAll('tbody tr');
            tableRows.forEach(function(row) {
                row.addEventListener('mouseenter', function() {
                    this.style.transform = 'translateY(-2px)';
                    this.style.backgroundColor = 'rgba(255, 255, 255, 0.08)';
                    this.style.boxShadow = '0 5px 15px rgba(0, 0, 0, 0.2)';
                });

                row.addEventListener('mouseleave', function() {
                    this.style.transform = '';
                    this.style.backgroundColor = 'rgba(255, 255, 255, 0.05)';
                    this.style.boxShadow = '0 2px 10px rgba(0, 0, 0, 0.1)';
                });
            });

            var statNumbers = document.querySelectorAll('.stat-number');
            statNumbers.forEach(function(stat) {
                var finalValue = parseInt(stat.textContent);
                var startValue = 0;
                var duration = 1500;
                var startTime = null;

                function animate(timestamp) {
                    if (!startTime) startTime = timestamp;
                    var progress = timestamp - startTime;
                    var percentage = Math.min(progress / duration, 1);
                    var value = Math.floor(percentage * finalValue);

                    stat.textContent = value;

                    if (percentage < 1) {
                        window.requestAnimationFrame(animate);
                    } else {
                        stat.textContent = finalValue;
                    }
                }

                window.requestAnimationFrame(animate);
            });
        });
    </script>
}