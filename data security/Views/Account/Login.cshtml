@model data_security.Models.LoginViewModel
@{
    ViewData["Title"] = "Login";
}

<style>
    :root {
        --primary-color: #0078ff; 
        --secondary-color: #ffde00; 
        --accent-color: #ff4e50; 
        --background-color: #001c40; 
        --text-color: #ffffff;
        --card-bg: rgba(255, 255, 255, 0.12);
        --input-bg: rgba(255, 255, 255, 0.08);
    }

    body {
        background: linear-gradient(135deg, var(--background-color), #000824);
        color: var(--text-color);
        font-family: 'Montserrat', sans-serif;
        height: 100vh;
    }

    .login-container {
        margin-top: 5%;
        animation: fadeIn 1s ease-in-out;
    }

    .card {
        background: var(--card-bg);
        border: none;
        border-radius: 15px;
        box-shadow: 0 8px 32px rgba(0, 0, 0, 0.3);
        backdrop-filter: blur(8px);
        transition: all 0.3s ease;
    }

    .card:hover {
        transform: translateY(-5px);
        box-shadow: 0 12px 40px rgba(0, 0, 0, 0.4);
    }

    .card-header {
        background: linear-gradient(135deg, var(--primary-color), #0051c8);
        color: white;
        border-radius: 15px 15px 0 0 !important;
        padding: 1.5rem;
        position: relative;
        overflow: hidden;
    }

    .card-header:before {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
        transform: rotate(45deg);
        animation: shimmer 3s infinite;
    }

    .card-body {
        padding: 2rem;
    }

    .form-control {
        background-color: var(--input-bg);
        border: 1px solid rgba(255, 255, 255, 0.1);
        border-radius: 8px;
        color: white;
        padding: 12px 15px;
        transition: all 0.3s;
    }

    .form-control:focus {
        background-color: rgba(255, 255, 255, 0.12);
        border-color: var(--primary-color);
        box-shadow: 0 0 0 3px rgba(0, 120, 255, 0.25);
        color: white;
    }

    .form-group {
        margin-bottom: 1.5rem;
        position: relative;
    }

    .form-group label {
        margin-bottom: 0.5rem;
        font-weight: 500;
        display: block;
        transition: all 0.3s;
    }

    .form-check-input {
        background-color: var(--input-bg);
        border: 1px solid rgba(255, 255, 255, 0.3);
    }

    .form-check-input:checked {
        background-color: var(--primary-color);
        border-color: var(--primary-color);
    }

    .btn-primary {
        background: linear-gradient(135deg, var(--primary-color), #0051c8);
        border: none;
        border-radius: 8px;
        padding: 12px 25px;
        font-weight: 600;
        letter-spacing: 0.5px;
        box-shadow: 0 4px 15px rgba(0, 120, 255, 0.3);
        transition: all 0.3s;
        position: relative;
        overflow: hidden;
    }

    .btn-primary:hover {
        transform: translateY(-2px);
        box-shadow: 0 8px 20px rgba(0, 120, 255, 0.4);
        background: linear-gradient(135deg, #0051c8, var(--primary-color));
    }

    .btn-primary:after {
        content: '';
        position: absolute;
        top: -50%;
        left: -50%;
        width: 200%;
        height: 200%;
        background: linear-gradient(45deg, transparent, rgba(255, 255, 255, 0.1), transparent);
        transform: rotate(45deg);
        transition: all 0.8s;
        opacity: 0;
    }

    .btn-primary:hover:after {
        animation: shimmer 1.5s infinite;
        opacity: 1;
    }

    a {
        color: var(--secondary-color);
        transition: all 0.3s;
        position: relative;
        text-decoration: none;
    }

    a:hover {
        color: white;
        text-shadow: 0 0 5px var(--secondary-color);
    }

    a:after {
        content: '';
        position: absolute;
        width: 0;
        height: 1px;
        bottom: -2px;
        left: 0;
        background-color: var(--secondary-color);
        transition: width 0.3s ease;
    }

    a:hover:after {
        width: 100%;
    }

    .text-danger {
        color: var(--accent-color) !important;
    }

    .alert-success {
        background-color: rgba(40, 167, 69, 0.2);
        border-color: rgba(40, 167, 69, 0.3);
        color: #d4edda;
    }

    .star {
        position: absolute;
        width: 2px;
        height: 2px;
        background: white;
        border-radius: 50%;
        animation: twinkle var(--duration) infinite;
        opacity: 0;
        z-index: -1;
    }

    .stars-container {
        position: fixed;
        top: 0;
        left: 0;
        width: 100%;
        height: 100%;
        overflow: hidden;
        z-index: -1;
    }

    .page-title {
        margin-bottom: 30px;
        text-align: center;
        font-weight: 700;
        font-size: 2.5rem;
        background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
        -webkit-background-clip: text;
        -webkit-text-fill-color: transparent;
        animation: glow 3s infinite alternate;
    }

    @@keyframes fadeIn {
        0% { opacity: 0; transform: translateY(20px); }
        100% { opacity: 1; transform: translateY(0); }
    }

    @@keyframes shimmer {
        0% { transform: translateX(-100%) rotate(45deg); }
        100% { transform: translateX(100%) rotate(45deg); }
    }

    @@keyframes twinkle {
        0% { opacity: 0; }
        50% { opacity: 1; }
        100% { opacity: 0; }
    }

    @@keyframes glow {
        0% { text-shadow: 0 0 5px rgba(0, 120, 255, 0.5); }
        100% { text-shadow: 0 0 15px rgba(0, 120, 255, 0.8), 0 0 30px rgba(0, 120, 255, 0.6); }
    }

    .form-field-animation {
        animation: fadeInUp 0.5s ease-out both;
        animation-delay: calc(var(--i) * 0.1s);
    }

    @@keyframes fadeInUp {
        0% { opacity: 0; transform: translateY(20px); }
        100% { opacity: 1; transform: translateY(0); }
    }

    .input-icon {
        position: absolute;
        right: 12px;
        top: 39px;
        color: rgba(255, 255, 255, 0.5);
        transition: all 0.3s;
    }

    .form-control:focus + .input-icon {
        color: var(--primary-color);
    }
</style>

<div class="stars-container" id="starsContainer"></div>

<div class="container login-container">
    <h1 class="page-title">Welcome Back</h1>
    <div class="row justify-content-center">
        <div class="col-md-6">
            <div class="card">
                <div class="card-header">
                    <h2 class="text-center mb-0">User Login</h2>
                </div>
                <div class="card-body">
                    <form asp-action="Login" method="post">
                        <div asp-validation-summary="ModelOnly" class="text-danger"></div>
                        @if (TempData["SuccessMessage"] != null)
                        {
                            <div class="alert alert-success">
                                @TempData["SuccessMessage"]
                            </div>
                        }
                        <div class="form-group" style="--i: 1">
                            <label asp-for="Username" class="control-label">Username</label>
                            <input asp-for="Username" class="form-control form-field-animation" placeholder="Enter your username" />
                            <i class="input-icon fas fa-user"></i>
                            <span asp-validation-for="Username" class="text-danger"></span>
                        </div>
                        <div class="form-group" style="--i: 2">
                            <label asp-for="Password" class="control-label">Password</label>
                            <input asp-for="Password" class="form-control form-field-animation" type="password" placeholder="Enter your password" />
                            <i class="input-icon fas fa-lock"></i>
                            <span asp-validation-for="Password" class="text-danger"></span>
                        </div>
                        <div class="form-group form-check" style="--i: 3">
                            <input asp-for="RememberMe" class="form-check-input form-field-animation" />
                            <label asp-for="RememberMe" class="form-check-label">Remember me</label>
                        </div>
                        <div class="form-group text-center" style="--i: 4">
                            <button type="submit" class="btn btn-primary btn-lg form-field-animation">
                                <span>Login</span>
                            </button>
                        </div>
                        <div class="text-center form-field-animation" style="--i: 5">
                            <p>
                                <a asp-action="ForgotPassword">Forgot your password?</a>
                            </p>
                            <p>
                                Don't have an account? <a asp-action="Register">Register here</a>
                            </p>
                        </div>
                    </form>
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    @{
        await Html.RenderPartialAsync("_ValidationScriptsPartial");
    }
    <script>
        document.addEventListener('DOMContentLoaded', function() {
            const starsContainer = document.getElementById('starsContainer');
            const starCount = 100;

            for (let i = 0; i < starCount; i++) {
                const star = document.createElement('div');
                star.classList.add('star');

                const left = Math.random() * 100;
                const top = Math.random() * 100;
                const size = Math.random() * 3 + 1;
                const duration = Math.random() * 3 + 2;

                star.style.left = `${left}%`;
                star.style.top = `${top}%`;
                star.style.width = `${size}px`;
                star.style.height = `${size}px`;
                star.style.setProperty('--duration', `${duration}s`);
                star.style.animationDelay = `${Math.random() * 5}s`;

                starsContainer.appendChild(star);
            }

            const formControls = document.querySelectorAll('.form-control');

            formControls.forEach(input => {
                input.addEventListener('focus', function() {
                    this.parentElement.querySelector('label').style.color = 'var(--primary-color)';
                });

                input.addEventListener('blur', function() {
                    this.parentElement.querySelector('label').style.color = '';
                });
            });
        });
    </script>
}